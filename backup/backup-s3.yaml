AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  IWAMIPrivateKeyName:
    Description: Private Key Name
    Type: String
  IWAMIID:
    Description: AMI ID
    Type: String
  IWSubnetId:
    Description: Public subnet ID
    Type: String
  IWAvailabilityZone:
    Description: AZ for volume
    Type: String
  IWVPCID:
    Description: CIDR block for VPC network
    Type: String
  IWPrivateSubnetCIDR:
    Description: CIDR block for VPC network
    Type: String
  ECConnectInstanceIP:
    Description: EC2 Connect Instance service IP in region
    Type: String
  IWFTPUser:
    Description: IW FTP user
    Type: String
  IWServiceUsers:
    Description: IW FTP user
    Type: String
Resources:
  IWShellSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId:
        Ref: IWVPCID
      GroupName: !Sub "${AWS::StackName}-${AWS::Region}a-ecic.sg"
      GroupDescription: SSH access
      SecurityGroupIngress:
        - CidrIp: !Ref ECConnectInstanceIP
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
          Description: SSH
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-${AWS::Region}a-ecic.sg"

  IWVPNShellSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId:
        Ref: IWVPCID
      GroupName: !Sub "${AWS::StackName}-${AWS::Region}a-ssh-vpn.sg"
      GroupDescription: SSH access
      SecurityGroupIngress:
        - CidrIp: !Ref IWPrivateSubnetCIDR
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
          Description: SSH
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-${AWS::Region}a-ssh-vpn.sg"

  # Users per server or product?
  # Crontab for automatic s3 updates
  # Mount sshfs on other servers
  # root extracts data and places into sshfs mount
  IWMavenBackupCacheInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref IWAMIID
      InstanceType: t3.micro
      KeyName: 
        Ref: IWAMIPrivateKeyName
      SecurityGroupIds: 
        - !GetAtt IWShellSecurityGroup.GroupId
        - !GetAtt IWVPNShellSecurityGroup.GroupId
      SubnetId: !Ref IWSubnetId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-${AWS::Region}a-instance"
      UserData:
        Fn::Base64: !Sub | 
          #!/bin/bash -xe

          #
          # Functions
          #
          function create_iw_service_user() {
              local sftp_directory=/var/local/${IWFTPUser}/$1
              local backup_directory=/var/local/${IWFTPUser}/$1/content

              # User
              sudo useradd \
                  --home-dir /opt/$1 \
                  --shell /sbin/nologin $1

              # Group
              sudo usermod -aG ${IWFTPUser} $1

              # Password
              local password=$(date | base64)
              echo $password | sudo passwd $1 --stdin
              sudo chage -M 3650 $1 # STIG

              # SSH access
              sudo cp -r $HOME/.ssh /opt/$1/
              sudo chown -R $1:$1 /opt/$1/.ssh
              sudo restorecon -F -R /opt/$1/.ssh

              # SFTP directory
              sudo mkdir -p $backup_directory
              sudo chown $1:${IWFTPUser} $backup_directory
              sudo chown root:${IWFTPUser} $sftp_directory
              sudo chmod -R o+rx $sftp_directory
              sudo restorecon -F -R $sftp_directory
          }

          #
          # Packages
          #
          sudo yum -y install epel-release
          sudo yum -y install \
              bc \
              elinks \
              firewalld \
              gettext \
              git \
              htop \
              openscap openscap-scanner openscap-utils \
              scap-security-guide \
              screen \
              s3cmd \
              vim \
              wget \
              unzip

          #
          # Services
          #
          sudo systemctl enable firewalld
          sudo systemctl restart firewalld

          #
          # Firewall 
          #
          sudo firewall-cmd --set-default-zone=drop
          sudo firewall-cmd --add-service ssh
          sudo firewall-cmd --add-service ssh --permanent

          #
          # PCI-DSS benchmark
          #
          sudo oscap xccdf eval \
            --fetch-remote-resources \
            --remediate \
            --profile xccdf_org.ssgproject.content_profile_pci-dss \
            --results pcidss-scan-results.xml \
            /usr/share/xml/scap/ssg/content/ssg-almalinux9-ds.xml

          # 
          # EC2 Instance Connect
          # Might need no additional access from anywhere else
          # 
          wget https://amazon-ec2-instance-connect-us-west-2.s3.us-west-2.amazonaws.com/latest/linux_amd64/ec2-instance-connect.rpm
          wget https://amazon-ec2-instance-connect-us-west-2.s3.us-west-2.amazonaws.com/latest/linux_amd64/ec2-instance-connect-selinux.noarch.rpm
          sudo yum install -y ec2-instance-connect.rpm
          sudo yum install -y ec2-instance-connect-selinux.noarch.rpm

          #
          # Attaching disk
          #
          sudo parted -s /dev/nvme1n1 mklabel gpt
          sudo parted -s /dev/nvme1n1 mkpart primary xfs 0% 100%
          sudo mkfs.xfs /dev/nvme1n1p1

          #
          # Attaching disk
          #
          sudo mkdir -p /var/local/${IWFTPUser}/
          sudo chown root:root /var/local/${IWFTPUser}/
          sudo chmod o+rx /var/local/${IWFTPUser}/
          sudo restorecon -F -R /var/local/${IWFTPUser}/
          echo "UUID=$(blkid -o value -s UUID /dev/nvme1n1p1) /var/local/${IWFTPUser} xfs defaults 0 0" | sudo tee -a /etc/fstab

          #
          # SSHFS
          #
          sudo groupadd ${IWFTPUser}
          sudo sed --in-place '/Subsystem/d' /etc/ssh/sshd_config
          echo 'Subsystem ${IWFTPUser} internal-sftp'       | sudo tee -a /etc/ssh/sshd_config
          echo 'Match Group ${IWFTPUser}'                   | sudo tee -a /etc/ssh/sshd_config
          echo 'ChrootDirectory /var/local/${IWFTPUser}/%u' | sudo tee -a /etc/ssh/sshd_config
          echo 'ForceCommand internal-sftp'                 | sudo tee -a /etc/ssh/sshd_config
          sudo systemctl restart sshd

          for iw_service_user_name in ${IWServiceUsers}; do 
            create_iw_service_user $iw_service_user_name
          done

  IWMavenBackupCacheInstanceVolume:
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: !Ref IWAvailabilityZone
      Size: 1024
      VolumeType: sc1
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-${AWS::Region}a-storage-volume"
  
  IWMavenBackupCacheInstanceVolumeAttachment:
    Type: AWS::EC2::VolumeAttachment
    Properties:
         VolumeId: !Ref IWMavenBackupCacheInstanceVolume
         InstanceId: !Ref IWMavenBackupCacheInstance
         Device: /dev/sde

